{"version":3,"sources":["unconvinced.mp3","App.js","serviceWorker.js","index.js","spinner-black.svg"],"names":["module","exports","ipcRenderer","window","require","bytesToString","bytes","i","Math","floor","log","pow","toFixed","App","props","setActiveTab","tab","setState","activeTab","onSearchBoxChange","e","searchBox","target","value","trim","searchResults","selectedBook","fetchGoogleBooksDebounced","fetchGoogleBooks","searchTerm","axios","get","params","q","then","res","state","data","items","length","uniqueResults","uniqBy","FetchLibgenSearchResults","onLibgenResultClick","libgenResult","googleBook","bookDownload","status","id","downloads","console","invoke","libgenBook","onBookRowClick","book","handleLibgenSearchResults","matches","forEach","index","includes","extension","toLowerCase","googleTitle","deburr","volumeInfo","title","libgenTitle","replace","moment","publishedDate","year","parseInt","push","map","item","libgenMatches","searching","Array","isArray","searchQuery","subtitle","authors","results","NoCoverImage","style","backgroundColor","minHeight","height","width","minWidth","marginRight","objectFit","alignSelf","display","alignItems","flex","justifyContent","color","fontSize","textAlign","SearchResults","isSelected","variants","initial","opacity","y","animate","transition","delay","div","className","onClick","data-index","key","paddingTop","paddingBottom","border","borderBottom","paddingLeft","paddingRight","imageLinks","alt","src","thumbnail","fontWeight","marginTop","join","SelectedBook","b","BookStatusBar","scale","duration","isDownloading","download","downloadText","percent","contentLength","downloaded","position","bottom","right","overflow","borderRadius","boxShadow","padding","maxWidth","SpinnerBlack","marginLeft","strokeWidth","strokeColor","MatchRows","match","whileHover","borderTop","author","size","maxHeight","borderTopLeftRadius","borderTopRightRadius","overflowX","flexDirection","userSelect","marginBottom","description","categories","industryIdentifiers","MainArea","split","primary","allowResize","defaultSize","borderRight","placeholder","type","onChange","background","overflowY","Sidebar","margin","whiteSpace","debounce","on","event","message","newDownloads","notifTitle","Audio","downloadCompleteSound","play","Notification","body","sound","silent","icon","onclick","Component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d6f7e157.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unconvinced.1de6c75d.mp3\";","import React, { Component } from 'react';\nimport axios from 'axios'\nimport moment from 'moment'\nimport { motion } from \"framer-motion\"\nimport { GiBookshelf } from \"react-icons/gi\";\nimport { debounce, deburr, uniqBy } from 'lodash'\nimport SpinnerBlack from './spinner-black.svg'\nimport SplitPane from 'react-split-pane'\nimport { Line } from 'rc-progress';\nimport downloadCompleteSound from './unconvinced.mp3'\n\n\n\nconst electron = window.require('electron');\nconst ipcRenderer = electron.ipcRenderer;\n\n\n\nconst bytesToString = (bytes) => {\n  // converts an integer bytes into a human readable string \n  var i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n};\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchBox: '',\n      searchResults: [],\n      selectedBook: null,\n      activeTab: 'search',\n      downloads: []\n    }\n    this.fetchGoogleBooksDebounced = debounce(this.fetchGoogleBooks, 300)\n  }\n\n\n  componentDidMount() {\n\n    ipcRenderer.on('download-progress', (event, message) => {\n      // the event handler for updating download progress\n      console.log(message)\n\n      let newDownloads = []\n      for (let download of this.state.downloads) {\n        if (message.id === download.id) {\n          newDownloads.push({\n            ...download,\n            contentLength: message.contentLength,\n            downloaded: message.downloaded\n          })\n        } else {\n          newDownloads.push(download)\n        }\n      }\n\n      this.setState({ downloads: newDownloads })\n    })\n\n    ipcRenderer.on('download-complete', (event, message) => {\n      // the event handler for setting a download as complete\n\n\n\n      let newDownloads = []\n      // removing the download from the list\n      this.state.downloads.forEach(download => {\n        if (download.id !== message.id) {\n          newDownloads.push(download)\n        } else {\n          // creating a notification\n          let notifTitle = download.googleBook.volumeInfo.title\n          var audio = new Audio(downloadCompleteSound);\n          audio.play();\n          let finishedNotification = new Notification(notifTitle, {\n            body: `Download complete.`,\n            sound: false,\n            silent: true,\n            icon: download.googleBook.volumeInfo?.imageLinks?.thumbnail\n          })\n\n          finishedNotification.onclick = () => {\n            console.log('notification clicked')\n            // TODO: open this book in the ebook reader\n            console.log(download.googleBook)\n          }\n        }\n      })\n\n      this.setState({ downloads: newDownloads })\n    })\n\n    axios.get(`https://www.googleapis.com/books/v1/volumes`, {\n      params: {\n        q: 'ron chernow'\n      }\n    }).then((res) => {\n      this.setState({ searchResults: res.data.items })\n    })\n  }\n\n  setActiveTab = (tab) => {\n    this.setState({ activeTab: tab })\n  }\n\n  onSearchBoxChange = (e) => {\n    this.setState({ searchBox: e.target.value })\n    if (e.target.value.trim() === '') {\n      this.setState({ searchResults: null, selectedBook: null })\n    }\n\n    this.fetchGoogleBooksDebounced(e.target.value)\n  }\n\n  fetchGoogleBooks = (searchTerm) => {\n\n    if (!searchTerm.trim()) {\n      // if the string is empty, we return\n      return\n    }\n\n\n    // populating api_data with an initial search\n    axios.get(`https://www.googleapis.com/books/v1/volumes`, {\n      params: {\n        q: searchTerm\n      }\n    }).then((res) => {\n      if (this.state.searchBox === searchTerm) {\n        if (res.data.items) {\n          if (res.data.items.length > 0) {\n\n            // removing non-unique results\n            let uniqueResults = uniqBy(res.data.items, 'id')\n\n            this.setState({ searchResults: uniqueResults, selectedBook: res.data.items[0] })\n            this.FetchLibgenSearchResults(res.data.items[0])\n          } else {\n            // if there are no results we clear the results\n            this.setState({ searchResults: [], selectedBook: null })\n          }\n        }\n      }\n\n    })\n  }\n\n  onLibgenResultClick = (libgenResult, googleBook) => {\n    // when the user clicks a download link\n\n    // updating state with this book being downloaded\n    let bookDownload = {\n      libgenResult: libgenResult,\n      googleBook: googleBook,\n      status: 'getting-download-page',\n      id: googleBook.id\n    }\n    this.setState({\n      downloads: [\n        this.state.downloads,\n        bookDownload\n      ]\n    })\n\n    console.log(bookDownload)\n\n    ipcRenderer.invoke('download-book', {\n      libgenBook: libgenResult,\n      googleBook: this.state.selectedBook\n    }).then((res) => {\n      console.log(res)\n    })\n  }\n\n  onBookRowClick = (book) => {\n    if (this.state.selectedBook?.id === book.id) {\n      this.setState({ selectedBook: null })\n    } else {\n      this.setState({ selectedBook: book })\n      this.FetchLibgenSearchResults(book)\n    }\n  }\n\n  handleLibgenSearchResults = (searchResults, selectedBook) => {\n    console.log(searchResults)\n\n    let matches = []\n\n    searchResults.forEach((book, index) => {\n\n      // only allowing epubs and pdfs\n      let supportedExtensions = ['epub', 'pdf', 'mobi']\n      if (!supportedExtensions.includes(book.extension.toLowerCase())) {\n        return\n      }\n\n      // normalizing the google title by trimming, deburring, and removing parenthesis\n      let googleTitle = deburr(selectedBook.volumeInfo.title)\n      let libgenTitle = deburr(book.title)\n      // removing parenthesis and brackets\n      libgenTitle = libgenTitle.replace(/(\\[.*?\\])/g, '')\n      libgenTitle = libgenTitle.replace(/(\\(.*?\\))/g, '')\n      googleTitle = googleTitle.replace(/(\\[.*?\\])/g, '')\n      googleTitle = googleTitle.replace(/(\\(.*?\\))/g, '')\n\n      // trimming the titles and lowercasing\n      libgenTitle = libgenTitle.trim().toLowerCase()\n      googleTitle = googleTitle.trim().toLowerCase()\n\n      // only showing matches that have the same year\n      let googleYear = moment(selectedBook.volumeInfo.publishedDate).year()\n      let libgenYear = parseInt(book.year)\n\n      matches.push(book)\n    })\n\n    if (this.state.searchResults) {\n      // updating the results \n      this.setState({\n        searchResults: this.state.searchResults.map((item, index) => {\n          if (item.id === selectedBook.id) {\n            return {\n              ...item,\n              libgenMatches: matches,\n              searching: false,\n            }\n          }\n          return item\n        })\n      })\n    }\n  }\n\n  FetchLibgenSearchResults = (book) => {\n\n\n    console.log('searching libgen for', book.volumeInfo.title)\n\n    // if a book already has libgen matches then we return\n    // or if a search has already began\n    if (book.searching || Array.isArray(book.libgenMatches) || !book) return\n\n\n    // showing the `searching` spinner at the bottom of the page\n    this.setState({\n      searchResults: this.state.searchResults.map((item, index) => {\n        if (book.id === item.id) {\n          return {\n            ...item,\n            searching: true\n          }\n        }\n        return item\n      })\n    })\n\n    // creating the libgen search query for the book\n    let searchQuery = book.volumeInfo.title\n    // if the book has a subtitle, we append it\n    searchQuery = book.volumeInfo.subtitle ? searchQuery + ` ` + book.volumeInfo.subtitle : searchQuery\n    // appending the first author's name to the query\n    searchQuery = searchQuery + ` ${book.volumeInfo.authors ? book.volumeInfo.authors : ``}`\n\n    console.log(searchQuery)\n\n    // sending the query to the main process to make the request for us\n    ipcRenderer.invoke('search-libgen-nonfiction', searchQuery).then((results) => {\n\n      if (!results) {\n        this.setState({\n          searchResults: this.state.searchResults.map((item, index) => {\n            if (item.id === book.id) {\n              return {\n                ...item,\n                searching: false,\n              }\n            }\n            return item\n          })\n        })\n      } else if (results.length === 0) {\n        // if there are no results we retry with a broader query by removing the book's description\n        // retrying with a broader search query by removing the book's description\n        // we keep the first author's name in the query\n        searchQuery = book.volumeInfo.title + ` ${book.volumeInfo.authors ? book.volumeInfo.authors[0] : ``}`\n        console.log(searchQuery)\n        ipcRenderer.invoke('search-libgen-nonfiction', book.volumeInfo.title).then((results) => {\n          this.handleLibgenSearchResults(results, book)\n        })\n      } else {\n        this.handleLibgenSearchResults(results, book)\n      }\n    })\n  }\n\n  NoCoverImage = (props) => {\n    return (\n      <div style={{\n        backgroundColor: `#eee`,\n        minHeight: props.height ? props.height : props.width / 3,\n        minWidth: props.width ? props.width : `100%`,\n        marginRight: 20,\n        objectFit: 'contain',\n        alignSelf: 'flex-start',\n        display: 'flex',\n        alignItems: 'center'\n      }}>\n        <p style={{\n          flex: 1,\n          alignSelf: 'center',\n          justifyContent: 'center',\n          color: 'grey',\n          fontSize: props.fontSize,\n          textAlign: 'center'\n        }}>No cover</p>\n      </div>\n    )\n  }\n\n\n  SearchResults = (props) => {\n\n    if (!this.state.searchResults) {\n      return null\n    }\n\n    const BookRows = this.state.searchResults.map((item, index) => {\n      const isSelected = this.state.selectedBook?.id === item.id\n\n      const variants = {\n        initial: { opacity: 0, y: 60 },\n        animate: { opacity: 1, y: 0, transition: { delay: index * .03 } }\n      }\n\n      return (\n        <motion.div\n          className=\"noSelect\"\n          initial='initial'\n          animate='animate'\n          variants={variants}\n          onClick={() => this.onBookRowClick(item)}\n          data-index={index}\n          key={item.id}\n          style={{\n            display: 'flex',\n            paddingTop: 10,\n            paddingBottom: 10,\n            backgroundColor: isSelected ? 'rgba(0,100,255,0.05)' : 'white',\n            border: isSelected ? `2px solid deepskyblue` : `2px solid transparent`,\n            borderBottom: isSelected ? `2px solid deepskyblue` : `2px solid #eee`,\n            paddingLeft: 20,\n            paddingRight: 20\n          }}\n        >\n          {item.volumeInfo.imageLinks ?\n            <img\n              alt=\"\"\n              className=\"noSelect\"\n              src={item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.thumbnail : null}\n              style={{\n                marginRight: 20,\n                objectFit: 'contain',\n                alignSelf: 'flex-start',\n                height: 100\n              }}\n            />\n            :\n            <this.NoCoverImage height={100} width={70} fontSize={12} />\n          }\n          <div\n            className=\"noSelect\"\n            style={{\n\n            }}>\n            <p style={{\n              fontWeight: 'bold',\n            }}>{item.volumeInfo.title}{item.volumeInfo.subtitle ? \": \" + item.volumeInfo.subtitle : null}\n            </p>\n\n            <p style={{\n              color: 'grey',\n              fontSize: 14,\n              marginTop: 5\n            }}>{item.volumeInfo.authors ? item.volumeInfo.authors.join(\", \") : \"Author Unavailable\"}</p>\n\n            <p style={{\n              color: 'grey',\n              fontSize: 14,\n            }}>{moment(item.volumeInfo.publishedDate).year()}</p>\n          </div>\n        </motion.div>\n      )\n    })\n    return BookRows\n  }\n\n  SelectedBook = (props) => {\n    if (!this.state.selectedBook) {\n      return null\n    }\n\n    // getting the current book\n    let book;\n    for (let i = 0; i < this.state.searchResults.length; i++) {\n      let b = this.state.searchResults[i]\n      if (b.id === this.state.selectedBook.id) {\n        book = b\n      }\n    }\n    if (!book) return\n\n\n    const variants = {\n      initial: { opacity: 0, scale: 1, y: 200 },\n      animate: { opacity: 1, scale: 1, y: 0, transition: { duration: 300 * .001 } }\n    }\n\n    // determining whether this book is already being downloaded\n    let isDownloading = false\n    let bookDownload;\n    for (let download of this.state.downloads) {\n      if (download.id === this.state.selectedBook.id) {\n        // if this book is in the downloads\n        bookDownload = download\n        isDownloading = true\n        break\n      }\n    }\n\n    console.log('bookdownload')\n    console.log(bookDownload)\n\n    let BookStatusBar;\n    if (isDownloading) {\n\n      let downloadText\n      let percent = 0\n      if (!bookDownload.contentLength) {\n        downloadText = 'Starting download...'\n      } else {\n        downloadText = `${bytesToString(bookDownload.downloaded)} / ${bytesToString(bookDownload.contentLength)}`\n        percent = (bookDownload.downloaded / bookDownload.contentLength) * 100\n      }\n\n      BookStatusBar = (\n        <div style={{\n          position: 'absolute',\n          alignSelf: 'flex-end',\n          justifyContent: 'flex-end',\n          display: 'flex',\n          bottom: 0,\n          right: 0,\n          overflow: 'hidden',\n          borderRadius: 4,\n        }}>\n          <motion.div\n            key={book.id}\n            variants={variants}\n            initial='initial'\n            animate='animate'\n            style={{\n              backgroundColor: '#eee',\n              border: `1px solid lightgrey`,\n              boxShadow: '0px 0px 8px lightgrey',\n              borderRadius: 4,\n              padding: 20,\n              paddingTop: 10,\n              paddingBottom: 10,\n              minWidth: 440,\n              maxWidth: 440,\n            }}>\n            <div style={{\n              display: 'flex',\n              justifyContent: 'left',\n              alignSelf: 'center',\n            }}>\n              <img\n                alt=\"\"\n                src={SpinnerBlack}\n                height={15}\n                width={15}\n                style={{\n                  marginRight: 10,\n                  alignSelf: 'center',\n                  marginLeft: 10\n                }}\n              />\n              <p style={{\n                alignSelf: 'center',\n              }}>{downloadText}</p>\n            </div>\n            <Line percent={percent} strokeWidth=\"1\" strokeColor=\"deepskyblue\" />\n\n          </motion.div>\n        </div>\n      )\n\n    } else if (book.searching) {\n      BookStatusBar = (\n        <div style={{\n          position: 'absolute',\n          alignSelf: 'flex-end',\n          justifyContent: 'flex-end',\n          display: 'flex',\n          bottom: 0,\n          right: 0,\n          overflow: 'hidden',\n          borderRadius: 4,\n        }}>\n          <motion.div\n            key={book.id}\n            variants={variants}\n            initial='initial'\n            animate='animate'\n            style={{\n              backgroundColor: '#eee',\n              border: `1px solid lightgrey`,\n              boxShadow: '0px 0px 8px lightgrey',\n              borderRadius: 4,\n              padding: 20,\n              paddingTop: 10,\n              paddingBottom: 10,\n            }}>\n            <div style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignSelf: 'center',\n            }}>\n              <img\n                alt=\"\"\n                src={SpinnerBlack}\n                height={15}\n                width={15}\n                style={{\n                  marginRight: 10,\n                  alignSelf: 'center',\n                }}\n              />\n              <p style={{\n                alignSelf: 'center',\n              }}>Loading sources...</p>\n            </div>\n\n          </motion.div>\n        </div>\n      )\n    } else if (book.libgenMatches) {\n      let MatchRows = book.libgenMatches.map((match, index) => {\n        // the rows of libgen results that match the selected book\n        return (\n          <motion.div\n            onClick={() => this.onLibgenResultClick(match, this.state.selectedBook)}\n            whileHover={{\n              backgroundColor: 'white',\n            }}\n            key={match.id}\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: index === 0 ? `2px solid lightgrey` : `1px solid lightgrey`,\n              padding: 20,\n              paddingTop: 5,\n              paddingBottom: 5,\n              backgroundColor: '#eee',\n            }}>\n            <div style={{\n              marginRight: 15\n            }}>\n              <p style={{\n                fontWeight: 'bold',\n                fontSize: 14,\n              }}>{match.title}</p>\n              <p style={{\n\n                fontSize: 14,\n              }}>{match.author}</p>\n            </div>\n\n            <div style={{\n              justifyContent: 'flex-end',\n              alignSelf: 'flex-start',\n              minWidth: 60\n            }}>\n              <p style={{\n                fontWeight: 'bold',\n                textAlign: 'right',\n                fontSize: 14,\n              }}>{match.extension}</p>\n              <p style={{\n                textAlign: 'right',\n                fontSize: 14,\n              }}>{match.size}</p>\n            </div>\n          </motion.div>\n\n        )\n      })\n      BookStatusBar = (\n        <motion.div\n          variants={variants}\n          initial='initial'\n          animate='animate'\n          style={{\n            position: 'absolute',\n            maxWidth: 440,\n            minWidth: 440,\n            alignSelf: 'flex-end',\n            justifyContent: 'flex-end',\n            display: 'flex',\n            bottom: 0,\n            right: 15,\n            maxHeight: `50vh`,\n            borderTopLeftRadius: 4,\n            borderTopRightRadius: 4,\n            // overflowY: 'scroll',\n            overflowX: 'hidden',\n            border: `1px solid lightgrey`\n\n          }}>\n          <div\n            style={{\n              backgroundColor: '#eee',\n              width: '100%',\n              boxShadow: '0px 0px 8px lightgrey',\n              borderTopLeftRadius: 4,\n              borderTopRightRadius: 4,\n\n            }}>\n            <div style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignSelf: 'center',\n              flexDirection: 'column',\n              width: '100%',\n            }}>\n              {MatchRows.length > 0 ?\n                <>\n                  <div style={{\n                    padding: 15,\n                    paddingTop: 10,\n                    paddingBottom: 10,\n                    display: 'flex',\n                    backgroundColor: '#eee',\n                  }}>\n                    <h4>Available versions:</h4>\n                  </div>\n                  {MatchRows}\n                </>\n                :\n                <div style={{\n                  padding: 15,\n                  paddingTop: 10,\n                  paddingBottom: 10,\n                  display: 'flex',\n                  backgroundColor: '#eee',\n                }}>\n                  <h4>This book was not found  (◞‸◟；)</h4>\n                </div>\n              }\n            </div>\n          </div>\n        </motion.div>\n      )\n    }\n\n    return (\n      <div style={{\n        display: 'flex',\n        padding: 40,\n        paddingRight: 30,\n        paddingLeft: 30,\n        paddingBottom: `calc(50vh + 30px)`,\n        overflow: 'hidden'\n      }}>\n        {BookStatusBar}\n        <div style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n          {book.volumeInfo.imageLinks ?\n            <img\n              alt=\"\"\n              className=\"book-img\"\n              src={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : null}\n              style={{\n                marginRight: 20,\n                objectFit: 'contain',\n                minWidth: 180,\n                alignSelf: 'flex-start',\n                justifyContent: 'center'\n              }}\n            />\n            :\n            <div style={{\n              marginRight: 20,\n              objectFit: 'contain',\n              minWidth: 180,\n              alignSelf: 'flex-start',\n            }}>\n              <this.NoCoverImage height={250} width={170} fontSize={18} />\n            </div>\n          }\n          {book.searching ?\n            <div style={{\n              display: 'flex',\n              justifyContent: 'flex-start'\n            }}>\n              <img\n                alt=\"\"\n                src={SpinnerBlack}\n                height={15}\n                width={15}\n                style={{\n                  marginRight: 15,\n                  alignSelf: 'center',\n                }}\n              />\n              <p style={{\n                marginTop: 5,\n              }}>Loading sources...</p>\n            </div>\n            : null\n          }\n        </div>\n        <div style={{\n          maxWidth: 600\n        }}>\n          <p style={{\n            fontWeight: 'bold',\n            fontSize: 22,\n            userSelect: 'text'\n          }}>{book.volumeInfo.title}{book.volumeInfo.subtitle ? \": \" + book.volumeInfo.subtitle : null}\n          </p>\n\n          <p style={{\n            color: 'grey',\n            userSelect: 'text'\n          }}>{book.volumeInfo.authors ? book.volumeInfo.authors.join(\", \") : \"Author Unavailable\"}</p>\n\n          <p style={{\n            color: 'grey',\n            marginTop: 3,\n            userSelect: 'text'\n          }}>{moment(book.volumeInfo.publishedDate).year()}</p>\n\n          <p style={{\n            marginTop: 20,\n            marginBottom: 20,\n            userSelect: 'text'\n          }}>{book.volumeInfo.description}</p>\n\n          {book.volumeInfo.categories ?\n            <>\n              <p style={{\n                marginTop: 20,\n                fontWeight: 'bold',\n                color: 'grey'\n              }}>Tags</p>\n              <p style={{\n                marginBottom: 20,\n                userSelect: 'text',\n              }}>{book.volumeInfo.categories?.join(',')}</p>\n            </>\n            : null}\n          <img src={`http://covers.openlibrary.org/b/isbn/${book.volumeInfo.industryIdentifiers[0]}-L.jpg`} />\n        </div>\n      </div>\n    )\n  }\n\n\n  MainArea = (props) => {\n\n    if (this.state.activeTab === `search`) {\n      return (\n        <SplitPane\n          split=\"vertical\"\n          primary=\"first\"\n          allowResize={true}\n          defaultSize={450}\n        >\n\n          <div style={{\n\n            overflow: 'scroll',\n            maxHeight: '100vh',\n            minHeight: '100vh',\n            position: 'relative',\n            borderRight: `1px solid lightgrey`\n          }}>\n            <div style={{\n              padding: 10,\n              borderBottom: `2px solid #eee`,\n              position: 'absolute',\n              width: '100%',\n              backgroundColor: 'white',\n              height: 60\n            }}>\n              <input\n                className=\"noSelect\"\n                placeholder='Enter a book title or author'\n                type=\"search\"\n                onChange={this.onSearchBoxChange}\n                value={this.state.searchBox}\n                style={{\n                  border: '1px solid lightgrey',\n                  padding: 10,\n                  width: '100%',\n                  background: '#eee',\n                  borderRadius: 8\n                }}\n              />\n            </div>\n            <div style={{\n              paddingTop: 60\n            }}>\n              <this.SearchResults />\n            </div>\n          </div>\n\n          <div style={{\n\n            height: '100vh',\n            overflowX: 'hidden',\n            overflowY: 'scroll'\n          }}>\n            < this.SelectedBook />\n          </div>\n        </SplitPane>\n\n      )\n    } else {\n      return (\n        <SplitPane\n          split=\"vertical\"\n          primary=\"first\"\n          allowResize={true}\n          defaultSize={450}\n        >\n          <div style={{\n\n            overflow: 'scroll',\n            maxHeight: '100vh',\n            minHeight: '100vh',\n            position: 'relative',\n          }}>\n          </div>\n\n          <div style={{\n\n          }}>\n          </div>\n        </SplitPane>\n      )\n    }\n\n  }\n\n  Sidebar = (props) => {\n    return (\n      <div\n        style={{\n          background: '#222',\n          minHeight: '100%',\n          margin: 0,\n          padding: 0,\n          overflowX: 'hidden',\n          whiteSpace: 'nowrap',\n        }}>\n\n        <div\n          className=\"window-button-container\"\n          style={{\n            paddingTop: 10,\n            paddingLeft: 10,\n            display: 'flex',\n            paddingBottom: 10,\n            position: 'absolute'\n          }}>\n          <div\n            onClick={() => ipcRenderer.invoke('window-event', 'close')}\n            className=\"window-button\"\n            style={{\n              height: 13,\n              width: 13,\n              background: '#FF605C',\n              borderRadius: '50%',\n              marginRight: 8,\n              overflow: 'hidden'\n            }}>\n          </div>\n          <div\n            onClick={() => ipcRenderer.invoke('window-event', 'minimize')}\n            style={{\n              height: 13,\n              width: 13,\n              background: '#FFBD44',\n              borderRadius: '50%',\n              marginRight: 8\n            }}>\n\n          </div>\n          <div\n            onClick={() => ipcRenderer.invoke('window-event', 'resize')}\n            style={{\n              height: 13,\n              width: 13,\n              background: '#00CA4E',\n              borderRadius: '50%',\n              marginRight: 9\n            }}></div>\n        </div>\n\n\n        <h2 style={{\n          color: 'white',\n          alignSelf: 'left',\n          textAlign: 'left',\n          marginBottom: 10,\n          opacity: .8,\n          userSelect: 'none',\n          fontWeight: '300',\n          fontSize: 22,\n          paddingLeft: 20,\n          paddingRight: 20,\n          marginTop: 40\n        }}>Alexandria</h2>\n        <p\n          onClick={() => this.setActiveTab('bookshelf')}\n          style={{\n            padding: 5,\n            paddingLeft: 20,\n            paddingRight: 20,\n            backgroundColor: this.state.activeTab === 'bookshelf' ? `rgba(0,0,255,.4)` : `transparent`,\n            color: 'white',\n            alignSelf: 'center',\n            fontSize: 14,\n            userSelect: 'none'\n          }}><GiBookshelf />&nbsp; Bookshelf</p>\n\n        <p\n          onClick={() => this.setActiveTab('search')}\n          style={{\n            padding: 5,\n            paddingLeft: 20,\n            paddingRight: 20,\n            backgroundColor: this.state.activeTab === 'search' ? `rgba(0,0,255,.4)` : `transparent`,\n            color: 'white',\n            alignSelf: 'center',\n            fontSize: 14,\n            userSelect: 'none'\n          }}>+ &nbsp;Add new book</p>\n      </div>\n    )\n  }\n\n  render() {\n\n    return (\n      <div\n        className=\"main-container\"\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          overflowY: 'hidden',\n          overflowX: 'hidden',\n          minHeight: '100%',\n          minWidth: '100%',\n          position: 'absolute',\n          margin: 0, padding: 0\n        }}>\n        <SplitPane\n          split=\"vertical\"\n          primary=\"first\"\n          allowResize={true}\n          defaultSize={250}\n        >\n\n          <this.Sidebar />\n          <this.MainArea />\n        </SplitPane>\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/spinner-black.693c372b.svg\";"],"sourceRoot":""}