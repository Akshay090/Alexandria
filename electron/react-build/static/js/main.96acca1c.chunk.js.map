{"version":3,"sources":["spinner-black.svg","unconvinced.mp3","App.js","serviceWorker.js","index.js"],"names":["module","exports","ipcRenderer","window","require","bytesToString","bytes","i","Math","floor","log","pow","toFixed","App","props","updateLocalBooks","invoke","then","books","setState","localBooks","console","setActiveTab","tab","activeTab","selectedBook","onSearchBoxChange","e","searchBox","target","value","trim","searchResults","fetchGoogleBooksDebounced","fetchGoogleBooks","searchTerm","axios","get","params","q","res","state","data","items","length","uniqueResults","uniqBy","FetchLibgenSearchResults","onLibgenResultClick","libgenResult","googleBook","bookDownload","status","id","downloads","libgenBook","onBookRowClick","book","onLocalBookClick","localBook","handleLibgenSearchResults","matches","forEach","index","includes","extension","toLowerCase","googleTitle","deburr","volumeInfo","title","libgenTitle","replace","moment","publishedDate","year","parseInt","push","map","item","libgenMatches","searching","Array","isArray","searchQuery","subtitle","authors","results","NoCoverImage","height","width","fontSize","style","backgroundColor","minHeight","minWidth","marginRight","objectFit","alignSelf","display","alignItems","flex","justifyContent","color","textAlign","SearchResults","isSelected","variants","initial","opacity","y","animate","transition","delay","div","className","onClick","data-index","key","duration","paddingTop","paddingBottom","border","borderBottom","paddingLeft","paddingRight","imageLinks","alt","src","thumbnail","fontWeight","marginTop","join","SelectedBook","b","bookAlreadyDownloaded","scale","isDownloading","download","BookStatusBar","position","bottom","right","overflow","borderRadius","boxShadow","padding","downloadText","percent","contentLength","downloaded","maxWidth","strokeWidth","strokeColor","SpinnerBlack","MatchRows","match","whileHover","borderTop","author","size","maxHeight","borderTopLeftRadius","borderTopRightRadius","overflowX","flexDirection","userSelect","marginBottom","description","categories","LocalBooksResults","whileTap","margin","ereader","MainArea","split","primary","allowResize","defaultSize","borderRight","placeholder","type","onChange","background","overflowY","flexWrap","Sidebar","whiteSpace","p","debounce","this","ePub","on","event","message","newDownloads","notifTitle","Audio","downloadCompleteSound","play","Notification","body","sound","silent","icon","onclick","Component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.96acca1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner-black.693c372b.svg\";","module.exports = __webpack_public_path__ + \"static/media/unconvinced.1de6c75d.mp3\";","import React, { Component } from 'react';\nimport axios from 'axios'\nimport moment from 'moment'\nimport { motion } from \"framer-motion\"\nimport { GiBookshelf } from \"react-icons/gi\";\nimport { debounce, deburr, uniqBy } from 'lodash'\nimport SpinnerBlack from './spinner-black.svg'\nimport SplitPane from 'react-split-pane'\nimport { Line } from 'rc-progress';\nimport downloadCompleteSound from './unconvinced.mp3'\n\n\n\n// loading electron from the window to access IpcRenderer\nconst electron = window.require('electron');\nconst ipcRenderer = electron.ipcRenderer;\n\n\n\nconst bytesToString = (bytes) => {\n  // converts an integer bytes into a human readable string \n  var i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n};\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchBox: '',\n      searchResults: [],\n      selectedBook: null,\n      activeTab: 'bookshelf',\n      downloads: [],\n      localBooks: null\n    }\n    this.fetchGoogleBooksDebounced = debounce(this.fetchGoogleBooks, 300)\n  }\n\n\n\n  componentDidMount() {\n    this.ePub = window.ePub\n\n    // updating the local books\n    this.updateLocalBooks()\n\n    ipcRenderer.on('download-progress', (event, message) => {\n      // the event handler for updating download progress\n\n      let newDownloads = []\n      for (let download of this.state.downloads) {\n        if (message.id === download.id) {\n          newDownloads.push({\n            ...download,\n            contentLength: message.contentLength,\n            downloaded: message.downloaded\n          })\n        } else {\n          newDownloads.push(download)\n        }\n      }\n\n      this.setState({ downloads: newDownloads })\n    })\n\n    ipcRenderer.on('download-complete', (event, message) => {\n      // the event handler for setting a download as complete\n\n      let newDownloads = []\n      // removing the download from the list\n      this.state.downloads.forEach(download => {\n        if (download.id !== message.id) {\n          newDownloads.push(download)\n        } else {\n          // creating a notification\n          let notifTitle = download.googleBook.volumeInfo.title\n          var audio = new Audio(downloadCompleteSound);\n          audio.play();\n          let finishedNotification = new Notification(notifTitle, {\n            body: `Download complete.`,\n            sound: false,\n            silent: true,\n            icon: download.googleBook.volumeInfo?.imageLinks?.thumbnail\n          })\n\n          finishedNotification.onclick = () => {\n            // opening the book when the notification is clicked\n            for (let localBook of this.state.localBooks) {\n              if (message.id === localBook.book.id) {\n\n                this.onLocalBookClick(localBook)\n                break\n              }\n            }\n            console.log(download.googleBook)\n          }\n        }\n      })\n      this.setState({ downloads: newDownloads })\n      this.updateLocalBooks()\n    })\n\n    axios.get(`https://www.googleapis.com/books/v1/volumes`, {\n      params: {\n        q: '\"Stripe Press\"'\n      }\n    }).then((res) => {\n      this.setState({ searchResults: res.data.items })\n    })\n  }\n\n  updateLocalBooks = () => {\n    // calling this function will update the localBooks value of state\n    ipcRenderer.invoke('get-local-books').then((books) => {\n\n      this.setState({ localBooks: books })\n      console.log(books)\n    })\n  }\n\n  setActiveTab = (tab) => {\n    this.setState({ activeTab: tab, selectedBook: null })\n\n\n    if (tab === 'bookshelf') {\n      // then we get the local books\n      this.updateLocalBooks()\n    }\n  }\n\n  onSearchBoxChange = (e) => {\n    this.setState({ searchBox: e.target.value })\n    if (e.target.value.trim() === '') {\n      this.setState({ searchResults: null, selectedBook: null })\n    }\n\n    this.fetchGoogleBooksDebounced(e.target.value)\n  }\n\n  fetchGoogleBooks = (searchTerm) => {\n\n    if (!searchTerm.trim()) {\n      // if the string is empty, we return\n      return\n    }\n\n\n    // populating api_data with an initial search\n    axios.get(`https://www.googleapis.com/books/v1/volumes`, {\n      params: {\n        q: searchTerm\n      }\n    }).then((res) => {\n      if (this.state.searchBox === searchTerm) {\n        if (res.data.items) {\n          if (res.data.items.length > 0) {\n\n            // removing non-unique results\n            let uniqueResults = uniqBy(res.data.items, 'id')\n\n            this.setState({ searchResults: uniqueResults, selectedBook: res.data.items[0] })\n            console.log(res.data.items)\n            this.FetchLibgenSearchResults(res.data.items[0])\n          } else {\n            // if there are no results we clear the results\n            this.setState({ searchResults: [], selectedBook: null })\n          }\n        }\n      }\n\n    })\n  }\n\n  onLibgenResultClick = (libgenResult, googleBook) => {\n    // when the user clicks a download link\n\n    // updating state with this book being downloaded\n    let bookDownload = {\n      libgenResult: libgenResult,\n      googleBook: googleBook,\n      status: 'getting-download-page',\n      id: googleBook.id\n    }\n    this.setState({\n      downloads: [\n        this.state.downloads,\n        bookDownload\n      ]\n    })\n\n\n    ipcRenderer.invoke('download-book', {\n      libgenBook: libgenResult,\n      googleBook: this.state.selectedBook\n    })\n  }\n\n  onBookRowClick = (book) => {\n    if (this.state.selectedBook?.id === book.id) {\n      this.setState({ selectedBook: null })\n    } else {\n      this.setState({ selectedBook: book })\n      this.FetchLibgenSearchResults(book)\n    }\n  }\n\n  onLocalBookClick = (localBook) => {\n    // when a local book is clicked\n    ipcRenderer.invoke('open-book', localBook)\n  }\n\n  handleLibgenSearchResults = (searchResults, selectedBook) => {\n    console.log(searchResults)\n\n    let matches = []\n\n    searchResults.forEach((book, index) => {\n\n      // only allowing epubs and pdfs\n      let supportedExtensions = ['epub', 'pdf',]\n      if (!supportedExtensions.includes(book.extension.toLowerCase())) {\n        return\n      }\n\n      // normalizing the google title by trimming, deburring, and removing parenthesis\n      let googleTitle = deburr(selectedBook.volumeInfo.title)\n      let libgenTitle = deburr(book.title)\n      // removing parenthesis and brackets\n      libgenTitle = libgenTitle.replace(/(\\[.*?\\])/g, '')\n      libgenTitle = libgenTitle.replace(/(\\(.*?\\))/g, '')\n      googleTitle = googleTitle.replace(/(\\[.*?\\])/g, '')\n      googleTitle = googleTitle.replace(/(\\(.*?\\))/g, '')\n\n      // trimming the titles and lowercasing\n      libgenTitle = libgenTitle.trim().toLowerCase()\n      googleTitle = googleTitle.trim().toLowerCase()\n\n      // only showing matches that have the same year\n      let googleYear = moment(selectedBook.volumeInfo.publishedDate).year()\n      let libgenYear = parseInt(book.year)\n\n      matches.push(book)\n    })\n\n    if (this.state.searchResults) {\n      // updating the results \n      this.setState({\n        searchResults: this.state.searchResults.map((item, index) => {\n          if (item.id === selectedBook.id) {\n            return {\n              ...item,\n              libgenMatches: matches,\n              searching: false,\n            }\n          }\n          return item\n        })\n      })\n    }\n  }\n\n  FetchLibgenSearchResults = (book) => {\n\n\n    // if a book already has libgen matches then we return\n    // or if a search has already began\n    if (book.searching || Array.isArray(book.libgenMatches) || !book) return\n\n\n    // showing the `searching` spinner at the bottom of the page\n    this.setState({\n      searchResults: this.state.searchResults.map((item, index) => {\n        if (book.id === item.id) {\n          return {\n            ...item,\n            searching: true\n          }\n        }\n        return item\n      })\n    })\n\n    // creating the libgen search query for the book\n    let searchQuery = book.volumeInfo.title\n    // if the book has a subtitle, we append it\n    searchQuery = book.volumeInfo.subtitle ? searchQuery + ` ` + book.volumeInfo.subtitle : searchQuery\n    // appending the first author's name to the query\n    searchQuery = searchQuery + ` ${book.volumeInfo.authors ? book.volumeInfo.authors : ``}`\n\n    // sending the query to the main process to make the request for us\n    ipcRenderer.invoke('search-libgen-nonfiction', searchQuery).then((results) => {\n\n      if (!results) {\n        this.setState({\n          searchResults: this.state.searchResults.map((item, index) => {\n            if (item.id === book.id) {\n              return {\n                ...item,\n                searching: false,\n              }\n            }\n            return item\n          })\n        })\n      } else if (results.length === 0) {\n        // if there are no results we retry with a broader query by removing the book's description\n        // retrying with a broader search query by removing the book's description\n        // we keep the first author's name in the query\n        searchQuery = book.volumeInfo.title + ` ${book.volumeInfo.authors ? book.volumeInfo.authors[0] : ``}`\n        ipcRenderer.invoke('search-libgen-nonfiction', book.volumeInfo.title).then((results) => {\n          this.handleLibgenSearchResults(results, book)\n        })\n      } else {\n        this.handleLibgenSearchResults(results, book)\n      }\n    })\n  }\n\n  NoCoverImage = (height, width, fontSize) => {\n    return (\n      <div style={{\n        backgroundColor: `#eee`,\n        minHeight: height ? height : width / 3,\n        minWidth: width ? width : `100%`,\n        marginRight: 20,\n        objectFit: 'contain',\n        alignSelf: 'flex-start',\n        display: 'flex',\n        alignItems: 'center'\n      }}>\n        <p style={{\n          flex: 1,\n          alignSelf: 'center',\n          justifyContent: 'center',\n          color: 'grey',\n          fontSize: fontSize,\n          textAlign: 'center'\n        }}>No cover</p>\n      </div>\n    )\n  }\n\n\n  SearchResults = (props) => {\n\n    if (!this.state.searchResults) {\n      return null\n    }\n\n    const BookRows = this.state.searchResults.map((item, index) => {\n      const isSelected = this.state.selectedBook?.id === item.id\n\n      const variants = {\n        initial: { opacity: 0, y: 60 },\n        animate: { opacity: 1, y: 0, transition: { delay: index * .03 } }\n      }\n\n      return (\n        <motion.div\n          className=\"noSelect search-result-book-row\"\n          initial='initial'\n          animate='animate'\n          variants={variants}\n          onClick={() => this.onBookRowClick(item)}\n          data-index={index}\n          key={item.id}\n          transition={{ duration: 0 }}\n          style={{\n            display: 'flex',\n            paddingTop: 10,\n            paddingBottom: 10,\n            backgroundColor: isSelected ? 'rgba(0,100,255,0.05)' : 'rgba(255,255,255,1)',\n            border: isSelected ? `2px solid deepskyblue` : `2px solid transparent`,\n            borderBottom: isSelected ? `2px solid deepskyblue` : `2px solid #eee`,\n            paddingLeft: 20,\n            paddingRight: 20\n          }}\n        >\n          {item.volumeInfo.imageLinks ?\n            <img\n              alt=\"\"\n              className=\"noSelect\"\n              src={item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.thumbnail : null}\n              style={{\n                marginRight: 20,\n                objectFit: 'contain',\n                alignSelf: 'flex-start',\n                height: 100\n              }}\n            />\n            :\n            this.NoCoverImage(100, 70, 17)\n          }\n          <div\n            className=\"noSelect\"\n            style={{\n\n            }}>\n            <p style={{\n              fontWeight: 'bold',\n            }}>{item.volumeInfo.title}{item.volumeInfo.subtitle ? \": \" + item.volumeInfo.subtitle : null}\n            </p>\n\n            <p style={{\n              color: 'grey',\n              fontSize: 14,\n              marginTop: 5\n            }}>{item.volumeInfo.authors ? item.volumeInfo.authors.join(\", \") : \"Author Unavailable\"}</p>\n\n            <p style={{\n              color: 'grey',\n              fontSize: 14,\n            }}>{moment(item.volumeInfo.publishedDate).year()}</p>\n          </div>\n        </motion.div>\n      )\n    })\n    return BookRows\n  }\n\n\n  SelectedBook = (props) => {\n    if (!this.state.selectedBook) {\n      return null\n    }\n\n    // getting the current book\n    let book;\n    for (let i = 0; i < this.state.searchResults.length; i++) {\n      let b = this.state.searchResults[i]\n      if (b.id === this.state.selectedBook.id) {\n        book = b\n      }\n    }\n    if (!book) return\n\n\n    const variants = {\n      initial: { opacity: 0, scale: 1, y: 200 },\n      animate: { opacity: 1, scale: 1, y: 0, transition: { duration: 300 * .001 } }\n    }\n\n    // determining whether this book is already being downloaded\n    let isDownloading = false\n    let bookDownload;\n    for (let download of this.state.downloads) {\n      if (download.id === this.state.selectedBook.id) {\n        // if this book is in the downloads\n        bookDownload = download\n        isDownloading = true\n        break\n      }\n    }\n\n    // checking if this book already exists in the user's local library\n    let bookAlreadyDownloaded;\n    for (let localBook of this.state.localBooks) {\n      if (this.state.selectedBook.id === localBook.book.id) {\n        bookAlreadyDownloaded = localBook\n        break\n      }\n    }\n\n    let BookStatusBar;\n\n    if (bookAlreadyDownloaded) {\n      BookStatusBar = (\n        <div style={{\n          position: 'absolute',\n          alignSelf: 'flex-end',\n          justifyContent: 'flex-end',\n          display: 'flex',\n          bottom: 0,\n          right: 0,\n          overflow: 'hidden',\n          borderRadius: 4,\n        }}>\n          <motion.div\n            key={book.id}\n            variants={variants}\n            initial='initial'\n            animate='animate'\n            onClick={() => this.onLocalBookClick(bookAlreadyDownloaded)}\n            style={{\n              backgroundColor: 'dodgerblue',\n              border: `1px solid lightgrey`,\n              boxShadow: '0px 0px 8px lightgrey',\n              borderRadius: 4,\n              padding: 20,\n              paddingTop: 10,\n              paddingBottom: 10,\n            }}>\n            <p style={{\n              color: 'white',\n              padding: 5,\n              fontWeight: 'bold'\n            }}>\n              Open {this.state.selectedBook.volumeInfo.title}\n            </p>\n          </motion.div>\n        </div>\n      )\n\n    } else if (isDownloading) {\n      let downloadText\n      let percent = 0\n      if (!bookDownload.contentLength) {\n        downloadText = 'Starting download...'\n      } else {\n        downloadText = `${bytesToString(bookDownload.downloaded)} / ${bytesToString(bookDownload.contentLength)}`\n        percent = (bookDownload.downloaded / bookDownload.contentLength) * 100\n      }\n\n      BookStatusBar = (\n        <div style={{\n          position: 'absolute',\n          alignSelf: 'flex-end',\n          justifyContent: 'flex-end',\n          display: 'flex',\n          bottom: 0,\n          right: 0,\n          overflow: 'hidden',\n          borderRadius: 4,\n        }}>\n          <motion.div\n            key={book.id}\n            variants={variants}\n            initial='initial'\n            animate='animate'\n            style={{\n              backgroundColor: '#eee',\n              border: `1px solid lightgrey`,\n              boxShadow: '0px 0px 8px lightgrey',\n              borderRadius: 4,\n              padding: 20,\n              paddingTop: 10,\n              paddingBottom: 10,\n              minWidth: 440,\n              maxWidth: 440,\n            }}>\n            <p style={{\n              alignSelf: 'center',\n              fontSize: 16\n            }}>{Math.floor(percent)}%</p>\n            <Line percent={percent} strokeWidth=\"1\" strokeColor=\"deepskyblue\" />\n            <p style={{\n              alignSelf: 'center',\n              fontSize: 14\n            }}>{downloadText}</p>\n\n          </motion.div>\n        </div>\n      )\n    } else if (book.searching) {\n      BookStatusBar = (\n        <div style={{\n          position: 'absolute',\n          alignSelf: 'flex-end',\n          justifyContent: 'flex-end',\n          display: 'flex',\n          bottom: 0,\n          right: 0,\n          overflow: 'hidden',\n          borderRadius: 4,\n        }}>\n          <motion.div\n            key={book.id}\n            variants={variants}\n            initial='initial'\n            animate='animate'\n            style={{\n              backgroundColor: '#eee',\n              border: `1px solid lightgrey`,\n              boxShadow: '0px 0px 8px lightgrey',\n              borderRadius: 4,\n              padding: 20,\n              paddingTop: 10,\n              paddingBottom: 10,\n            }}>\n            <div style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignSelf: 'center',\n            }}>\n              <img\n                alt=\"\"\n                src={SpinnerBlack}\n                height={15}\n                width={15}\n                style={{\n                  marginRight: 10,\n                  alignSelf: 'center',\n                }}\n              />\n              <p style={{\n                alignSelf: 'center',\n              }}>Loading sources...</p>\n            </div>\n\n          </motion.div>\n        </div>\n      )\n    } else if (book.libgenMatches) {\n      let MatchRows = book.libgenMatches.map((match, index) => {\n        // the rows of libgen results that match the selected book\n        return (\n          <motion.div\n            onClick={() => this.onLibgenResultClick(match, this.state.selectedBook)}\n            whileHover={{\n              backgroundColor: 'white',\n            }}\n\n            key={match.id}\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: index === 0 ? `2px solid lightgrey` : `1px solid lightgrey`,\n              padding: 20,\n              paddingTop: 5,\n              paddingBottom: 5,\n              backgroundColor: '#eee',\n            }}>\n            <div style={{\n              marginRight: 15\n            }}>\n              <p style={{\n                fontWeight: 'bold',\n                fontSize: 14,\n              }}>{match.title}</p>\n              <p style={{\n\n                fontSize: 14,\n              }}>{match.author}</p>\n            </div>\n\n            <div style={{\n              justifyContent: 'flex-end',\n              alignSelf: 'flex-start',\n              minWidth: 60\n            }}>\n              <p style={{\n                fontWeight: 'bold',\n                textAlign: 'right',\n                fontSize: 14,\n              }}>{match.extension}</p>\n              <p style={{\n                textAlign: 'right',\n                fontSize: 14,\n              }}>{match.size}</p>\n            </div>\n          </motion.div>\n\n        )\n      })\n      BookStatusBar = (\n        <motion.div\n          variants={variants}\n          initial='initial'\n          animate='animate'\n          style={{\n            position: 'absolute',\n            maxWidth: 440,\n            minWidth: 440,\n            alignSelf: 'flex-end',\n            justifyContent: 'flex-end',\n            display: 'flex',\n            bottom: 0,\n            right: 15,\n            maxHeight: `50vh`,\n            borderTopLeftRadius: 4,\n            borderTopRightRadius: 4,\n            // overflowY: 'scroll',\n            overflowX: 'hidden',\n            border: `1px solid lightgrey`\n\n          }}>\n          <div\n            style={{\n              backgroundColor: '#eee',\n              width: '100%',\n              boxShadow: '0px 0px 8px lightgrey',\n              borderTopLeftRadius: 4,\n              borderTopRightRadius: 4,\n\n            }}>\n            <div style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignSelf: 'center',\n              flexDirection: 'column',\n              width: '100%',\n            }}>\n              {MatchRows.length > 0 ?\n                <>\n                  <div style={{\n                    padding: 15,\n                    paddingTop: 10,\n                    paddingBottom: 10,\n                    display: 'flex',\n                    backgroundColor: '#eee',\n                  }}>\n                    <h4>Available versions:</h4>\n                  </div>\n                  {MatchRows}\n                </>\n                :\n                <div style={{\n                  padding: 15,\n                  paddingTop: 10,\n                  paddingBottom: 10,\n                  display: 'flex',\n                  backgroundColor: '#eee',\n                }}>\n                  <h4>This book was not found  (◞‸◟；)</h4>\n                </div>\n              }\n            </div>\n          </div>\n        </motion.div>\n      )\n    }\n\n    return (\n      <div style={{\n        display: 'flex',\n        padding: 40,\n        paddingRight: 30,\n        paddingLeft: 30,\n        paddingBottom: `calc(50vh + 30px)`,\n        overflow: 'hidden'\n      }}>\n        {BookStatusBar}\n        <div style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n          {book.volumeInfo.imageLinks ?\n            <img\n              alt=\"\"\n              className=\"book-img\"\n              src={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : null}\n              style={{\n                marginRight: 20,\n                objectFit: 'contain',\n                minWidth: 180,\n                alignSelf: 'flex-start',\n                justifyContent: 'center'\n              }}\n            />\n            :\n            <div style={{\n              marginRight: 20,\n              objectFit: 'contain',\n              minWidth: 180,\n              alignSelf: 'flex-start',\n            }}>\n              {this.NoCoverImage(250, 170, 18)}\n            </div>\n          }\n          {book.searching ?\n            <div style={{\n              display: 'flex',\n              justifyContent: 'flex-start'\n            }}>\n              <img\n                alt=\"\"\n                src={SpinnerBlack}\n                height={15}\n                width={15}\n                style={{\n                  marginRight: 15,\n                  alignSelf: 'center',\n                }}\n              />\n              <p style={{\n                marginTop: 5,\n              }}>Loading sources...</p>\n            </div>\n            : null\n          }\n        </div>\n        <div style={{\n          maxWidth: 600\n        }}>\n          <p style={{\n            fontWeight: 'bold',\n            fontSize: 22,\n            userSelect: 'text'\n          }}>{book.volumeInfo.title}{book.volumeInfo.subtitle ? \": \" + book.volumeInfo.subtitle : null}\n          </p>\n\n          <p style={{\n            color: 'grey',\n            userSelect: 'text'\n          }}>{book.volumeInfo.authors ? book.volumeInfo.authors.join(\", \") : \"Author Unavailable\"}</p>\n\n          <p style={{\n            color: 'grey',\n            marginTop: 3,\n            userSelect: 'text'\n          }}>{moment(book.volumeInfo.publishedDate).year()}</p>\n\n          <p style={{\n            marginTop: 20,\n            marginBottom: 20,\n            userSelect: 'text'\n          }}>{book.volumeInfo.description}</p>\n\n          {book.volumeInfo.categories ?\n            <>\n              <p style={{\n                marginTop: 20,\n                fontWeight: 'bold',\n                color: 'grey'\n              }}>Tags</p>\n              <p style={{\n                marginBottom: 20,\n                userSelect: 'text',\n              }}>{book.volumeInfo.categories?.join(',')}</p>\n            </>\n            : null}\n\n        </div>\n      </div>\n    )\n  }\n\n  LocalBooksResults = (props) => {\n\n    if (!this.state.localBooks) {\n      return null\n    } else if (this.state.localBooks.length === 0) {\n      return (\n        <p style={{\n          padding: 10,\n          paddingLeft: 20,\n        }}>Search for a book to add it to your library!</p>\n      )\n    }\n\n    const BookRows = this.state.localBooks.map((localBook, index) => {\n      const isSelected = this.state.selectedBook?.id === localBook.book.id\n      let book = localBook.book.volumeInfo\n\n      const variants = {\n        initial: { opacity: 0, y: 60 },\n        animate: { opacity: 1, y: 0, transition: { delay: index * .03 } }\n      }\n\n      return (\n        <motion.div\n          transition={{ duration: 0 }}\n          className=\"noSelect local-book-item\"\n          initial='initial'\n          animate='animate'\n          variants={variants}\n          onClick={() => this.onLocalBookClick(localBook)}\n          data-index={index}\n          key={`local-${localBook.book.id}`}\n          whileHover={{\n            scale: 1.02,\n            transition: { duration: .2 },\n          }}\n          whileTap={{\n            backgroundColor: 'rgba(0,100,255,.1)',\n          }}\n          style={{\n            display: 'flex',\n            paddingTop: 10,\n            paddingBottom: 10,\n            backgroundColor: 'white',\n            boxShadow: \"6px 6px rgba(0,100,255,.1)\",\n            paddingLeft: 20,\n            paddingRight: 20,\n            maxWidth: 420,\n            minWidth: 420,\n            margin: 15,\n            borderRadius: 8\n          }}\n        >\n          {book.imageLinks ?\n            <img\n              alt=\"\"\n              className=\"noSelect\"\n              src={book.imageLinks ? book.imageLinks.thumbnail : null}\n              style={{\n                marginRight: 20,\n                objectFit: 'contain',\n                alignSelf: 'flex-start',\n                height: 100\n              }}\n            />\n            :\n            this.NoCoverImage(100, 70, 17)\n          }\n          <div\n            className=\"noSelect\"\n            style={{\n\n            }}>\n            <p style={{\n              fontWeight: 'bold',\n            }}>{book.title}{book.subtitle ? \": \" + book.subtitle : null}\n            </p>\n\n            <p style={{\n              color: 'grey',\n              fontSize: 14,\n              marginTop: 5\n            }}>{book.authors ? book.authors.join(\", \") : \"Author Unavailable\"}</p>\n\n            <p style={{\n              color: 'grey',\n              fontSize: 14,\n            }}>{moment(book.publishedDate).year()}</p>\n          </div>\n        </motion.div>\n      )\n    })\n    return BookRows\n  }\n\n  ereader = () => {\n    return (\n      <div id='ereader'>\n\n      </div>\n    )\n  }\n\n\n  MainArea = (props) => {\n\n    if (this.state.activeTab === 'search') {\n      return (\n        <SplitPane\n          split=\"vertical\"\n          primary=\"first\"\n          allowResize={true}\n          defaultSize={450}\n        >\n\n          <div style={{\n\n            overflow: 'scroll',\n            maxHeight: '100vh',\n            minHeight: '100vh',\n            position: 'relative',\n            borderRight: `1px solid lightgrey`\n          }}>\n            <div style={{\n              padding: 10,\n              borderBottom: `2px solid #eee`,\n              position: 'absolute',\n              width: '100%',\n              backgroundColor: 'white',\n              height: 60\n            }}>\n              <input\n                className=\"noSelect\"\n                placeholder='Enter a book title or author'\n                type=\"search\"\n                onChange={this.onSearchBoxChange}\n                value={this.state.searchBox}\n                style={{\n                  border: '1px solid lightgrey',\n                  padding: 10,\n                  width: '100%',\n                  background: '#eee',\n                  borderRadius: 8\n                }}\n              />\n            </div>\n            <div style={{\n              paddingTop: 60\n            }}>\n              {this.SearchResults()}\n            </div>\n          </div>\n\n          <div style={{\n\n            height: '100vh',\n            overflowX: 'hidden',\n            overflowY: 'scroll'\n          }}>\n            {this.SelectedBook()}\n          </div>\n        </SplitPane>\n      )\n    } else if (this.state.activeTab === 'bookshelf') {\n      return (\n\n        <div style={{\n          overflow: 'scroll',\n          maxHeight: '100vh',\n          minHeight: '100vh',\n          position: 'relative',\n          borderRight: `1px solid lightgrey`,\n          background: '#eee'\n        }}>\n          <div style={{\n            paddingTop: 20,\n            paddingLeft: 20,\n            paddingBottom: 10,\n            borderBottom: `2px solid #eee`\n          }}>\n            <h3 style={{\n            }}>My Bookshelf</h3>\n          </div>\n          <div style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n          }}>\n            {this.LocalBooksResults()}\n          </div>\n        </div>\n\n      )\n    }\n  }\n\n  Sidebar = (props) => {\n    return (\n      <div\n        style={{\n          background: '#222',\n          minHeight: '100%',\n          margin: 0,\n          padding: 0,\n          overflowX: 'hidden',\n          whiteSpace: 'nowrap',\n        }}>\n\n        <div\n          className=\"window-button-container drag-handle\"\n          style={{\n            paddingTop: 10,\n            paddingLeft: 10,\n            display: 'flex',\n            paddingBottom: 10,\n            position: 'absolute',\n            width: `100%`\n          }}>\n          <div\n            onClick={() => ipcRenderer.invoke('window-event', 'close')}\n            className=\"window-button\"\n            style={{\n              height: 13,\n              width: 13,\n              background: '#FF605C',\n              borderRadius: '50%',\n              marginRight: 8,\n              overflow: 'hidden'\n            }}>\n          </div>\n          <div\n            onClick={() => ipcRenderer.invoke('window-event', 'minimize')}\n            style={{\n              height: 13,\n              width: 13,\n              background: '#FFBD44',\n              borderRadius: '50%',\n              marginRight: 8\n            }}>\n\n          </div>\n          <div\n            onClick={() => ipcRenderer.invoke('window-event', 'resize')}\n            style={{\n              height: 13,\n              width: 13,\n              background: '#00CA4E',\n              borderRadius: '50%',\n              marginRight: 9\n            }}></div>\n        </div>\n        <p style={{\n          marginTop: 50\n        }}></p>\n        <p\n          onClick={() => this.setActiveTab('search')}\n          style={{\n            padding: 5,\n            paddingLeft: 20,\n            paddingRight: 20,\n            backgroundColor: this.state.activeTab === 'search' ? `rgba(0,0,255,.4)` : `transparent`,\n            color: 'white',\n            alignSelf: 'center',\n            fontSize: 14,\n            userSelect: 'none'\n          }}>🔎 &nbsp;Get book</p>\n\n        <p\n          onClick={() => this.setActiveTab('bookshelf')}\n          style={{\n            padding: 5,\n            paddingLeft: 20,\n            paddingRight: 20,\n            backgroundColor: this.state.activeTab === 'bookshelf' ? `rgba(0,0,255,.4)` : `transparent`,\n            color: 'white',\n            alignSelf: 'center',\n            fontSize: 14,\n            userSelect: 'none'\n          }}>📚&nbsp; My Bookshelf</p>\n\n        <motion.p\n          whileHover={{\n            color: 'rgba(255,255,255,1)',\n          }}\n          onClick={() => ipcRenderer.invoke('open-books-dir')}\n          style={{\n            position: 'absolute',\n            bottom: 0,\n            marginBottom: 10,\n            padding: 5,\n            paddingLeft: 20,\n            paddingRight: 20,\n            backgroundColor: 'transparent',\n            color: 'rgba(255,255,255,.7)',\n            alignSelf: 'center',\n            fontSize: 14,\n            userSelect: 'none'\n          }}>📁 Open Storage Directory</motion.p>\n      </div>\n    )\n  }\n\n  render() {\n\n    return (\n      <div\n        className=\"main-container\"\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          overflowY: 'hidden',\n          overflowX: 'hidden',\n          minHeight: '100%',\n          minWidth: '100%',\n          position: 'absolute',\n          margin: 0, padding: 0\n        }}>\n        <SplitPane\n          split=\"vertical\"\n          primary=\"first\"\n          allowResize={true}\n          defaultSize={250}\n        >\n\n          <this.Sidebar />\n          <this.MainArea />\n        </SplitPane>\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as Sentry from '@sentry/browser';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}